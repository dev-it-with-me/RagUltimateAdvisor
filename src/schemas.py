from pydantic import BaseModel, Field


class SourceDocument(BaseModel):
    """Represents a source document used for context in the RAG response."""

    content: str = Field(..., description="The content of the source document.")
    score: float = Field(
        ..., description="Similarity score of the document to the query."
    )
    metadata: dict = Field(
        default_factory=dict, description="Additional metadata about the document."
    )


class QueryRequest(BaseModel):
    query: str = Field(..., description="The query string to be processed.")
    top_k: int = Field(5, description="Number of top results to return.", ge=1)


class QueryResponse(BaseModel):
    chat_response: str = Field(..., description="Response generated by the chat model.")
    source_documents: list[SourceDocument] = Field(
        default_factory=list,
        description="List of source documents that were used as context for the response.",
    )
